/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkspacesNewRouteImport } from './routes/workspaces.new'
import { Route as SidebarWorkspacesRouteImport } from './routes/_sidebar.workspaces'
import { Route as SidebarWorkspacesIndexRouteImport } from './routes/_sidebar.workspaces.index'
import { Route as SidebarWorkspacesWorkspaceIdRouteImport } from './routes/_sidebar.workspaces.$workspaceId'
import { Route as SidebarWorkspacesWorkspaceIdIndexRouteImport } from './routes/_sidebar.workspaces.$workspaceId.index'
import { Route as SidebarWorkspacesWorkspaceIdDocsDocumentIdRouteImport } from './routes/_sidebar.workspaces.$workspaceId.docs.$documentId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspacesNewRoute = WorkspacesNewRouteImport.update({
  id: '/workspaces/new',
  path: '/workspaces/new',
  getParentRoute: () => rootRouteImport,
} as any)
const SidebarWorkspacesRoute = SidebarWorkspacesRouteImport.update({
  id: '/_sidebar/workspaces',
  path: '/workspaces',
  getParentRoute: () => rootRouteImport,
} as any)
const SidebarWorkspacesIndexRoute = SidebarWorkspacesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SidebarWorkspacesRoute,
} as any)
const SidebarWorkspacesWorkspaceIdRoute =
  SidebarWorkspacesWorkspaceIdRouteImport.update({
    id: '/$workspaceId',
    path: '/$workspaceId',
    getParentRoute: () => SidebarWorkspacesRoute,
  } as any)
const SidebarWorkspacesWorkspaceIdIndexRoute =
  SidebarWorkspacesWorkspaceIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => SidebarWorkspacesWorkspaceIdRoute,
  } as any)
const SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute =
  SidebarWorkspacesWorkspaceIdDocsDocumentIdRouteImport.update({
    id: '/docs/$documentId',
    path: '/docs/$documentId',
    getParentRoute: () => SidebarWorkspacesWorkspaceIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/workspaces': typeof SidebarWorkspacesRouteWithChildren
  '/workspaces/new': typeof WorkspacesNewRoute
  '/workspaces/$workspaceId': typeof SidebarWorkspacesWorkspaceIdRouteWithChildren
  '/workspaces/': typeof SidebarWorkspacesIndexRoute
  '/workspaces/$workspaceId/': typeof SidebarWorkspacesWorkspaceIdIndexRoute
  '/workspaces/$workspaceId/docs/$documentId': typeof SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/workspaces/new': typeof WorkspacesNewRoute
  '/workspaces': typeof SidebarWorkspacesIndexRoute
  '/workspaces/$workspaceId': typeof SidebarWorkspacesWorkspaceIdIndexRoute
  '/workspaces/$workspaceId/docs/$documentId': typeof SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_sidebar/workspaces': typeof SidebarWorkspacesRouteWithChildren
  '/workspaces/new': typeof WorkspacesNewRoute
  '/_sidebar/workspaces/$workspaceId': typeof SidebarWorkspacesWorkspaceIdRouteWithChildren
  '/_sidebar/workspaces/': typeof SidebarWorkspacesIndexRoute
  '/_sidebar/workspaces/$workspaceId/': typeof SidebarWorkspacesWorkspaceIdIndexRoute
  '/_sidebar/workspaces/$workspaceId/docs/$documentId': typeof SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/workspaces'
    | '/workspaces/new'
    | '/workspaces/$workspaceId'
    | '/workspaces/'
    | '/workspaces/$workspaceId/'
    | '/workspaces/$workspaceId/docs/$documentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/workspaces/new'
    | '/workspaces'
    | '/workspaces/$workspaceId'
    | '/workspaces/$workspaceId/docs/$documentId'
  id:
    | '__root__'
    | '/'
    | '/_sidebar/workspaces'
    | '/workspaces/new'
    | '/_sidebar/workspaces/$workspaceId'
    | '/_sidebar/workspaces/'
    | '/_sidebar/workspaces/$workspaceId/'
    | '/_sidebar/workspaces/$workspaceId/docs/$documentId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SidebarWorkspacesRoute: typeof SidebarWorkspacesRouteWithChildren
  WorkspacesNewRoute: typeof WorkspacesNewRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspaces/new': {
      id: '/workspaces/new'
      path: '/workspaces/new'
      fullPath: '/workspaces/new'
      preLoaderRoute: typeof WorkspacesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sidebar/workspaces': {
      id: '/_sidebar/workspaces'
      path: '/workspaces'
      fullPath: '/workspaces'
      preLoaderRoute: typeof SidebarWorkspacesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_sidebar/workspaces/': {
      id: '/_sidebar/workspaces/'
      path: '/'
      fullPath: '/workspaces/'
      preLoaderRoute: typeof SidebarWorkspacesIndexRouteImport
      parentRoute: typeof SidebarWorkspacesRoute
    }
    '/_sidebar/workspaces/$workspaceId': {
      id: '/_sidebar/workspaces/$workspaceId'
      path: '/$workspaceId'
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof SidebarWorkspacesWorkspaceIdRouteImport
      parentRoute: typeof SidebarWorkspacesRoute
    }
    '/_sidebar/workspaces/$workspaceId/': {
      id: '/_sidebar/workspaces/$workspaceId/'
      path: '/'
      fullPath: '/workspaces/$workspaceId/'
      preLoaderRoute: typeof SidebarWorkspacesWorkspaceIdIndexRouteImport
      parentRoute: typeof SidebarWorkspacesWorkspaceIdRoute
    }
    '/_sidebar/workspaces/$workspaceId/docs/$documentId': {
      id: '/_sidebar/workspaces/$workspaceId/docs/$documentId'
      path: '/docs/$documentId'
      fullPath: '/workspaces/$workspaceId/docs/$documentId'
      preLoaderRoute: typeof SidebarWorkspacesWorkspaceIdDocsDocumentIdRouteImport
      parentRoute: typeof SidebarWorkspacesWorkspaceIdRoute
    }
  }
}

interface SidebarWorkspacesWorkspaceIdRouteChildren {
  SidebarWorkspacesWorkspaceIdIndexRoute: typeof SidebarWorkspacesWorkspaceIdIndexRoute
  SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute: typeof SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute
}

const SidebarWorkspacesWorkspaceIdRouteChildren: SidebarWorkspacesWorkspaceIdRouteChildren =
  {
    SidebarWorkspacesWorkspaceIdIndexRoute:
      SidebarWorkspacesWorkspaceIdIndexRoute,
    SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute:
      SidebarWorkspacesWorkspaceIdDocsDocumentIdRoute,
  }

const SidebarWorkspacesWorkspaceIdRouteWithChildren =
  SidebarWorkspacesWorkspaceIdRoute._addFileChildren(
    SidebarWorkspacesWorkspaceIdRouteChildren,
  )

interface SidebarWorkspacesRouteChildren {
  SidebarWorkspacesWorkspaceIdRoute: typeof SidebarWorkspacesWorkspaceIdRouteWithChildren
  SidebarWorkspacesIndexRoute: typeof SidebarWorkspacesIndexRoute
}

const SidebarWorkspacesRouteChildren: SidebarWorkspacesRouteChildren = {
  SidebarWorkspacesWorkspaceIdRoute:
    SidebarWorkspacesWorkspaceIdRouteWithChildren,
  SidebarWorkspacesIndexRoute: SidebarWorkspacesIndexRoute,
}

const SidebarWorkspacesRouteWithChildren =
  SidebarWorkspacesRoute._addFileChildren(SidebarWorkspacesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SidebarWorkspacesRoute: SidebarWorkspacesRouteWithChildren,
  WorkspacesNewRoute: WorkspacesNewRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
